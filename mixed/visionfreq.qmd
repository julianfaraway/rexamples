---
title: Repeated Measures with Vision Data using Frequentist Methods
author: "[Julian Faraway](https://julianfaraway.github.io/)"
date: "`r format(Sys.time(), '%d %B %Y')`"
format: 
  gfm:
    toc: true
---

```{r}
#| label: global_options
#| include: false
knitr::opts_chunk$set(comment=NA, 
                      echo = TRUE,
                      fig.path="figs/",
                      dev = 'svglite',  
                      fig.ext = ".svg",
                      warning=FALSE, 
                      message=FALSE)
knitr::opts_knit$set(global.par = TRUE)
```

```{r}
#| label: graphopts
#| include: false
par(mgp=c(1.5,0.5,0), mar=c(3.1,3.1,0.1,0), pch=20)
ggplot2::theme_set(ggplot2::theme_bw())
```

See the [introduction](index.md) for an overview. 

See a [mostly Bayesian analysis](vision.md) analysis of the same
data. 


This example is discussed in more detail in my book
[Extending the Linear Model with R](https://julianfaraway.github.io/faraway/ELM/)

Required libraries:

```{r}
library(faraway)
library(ggplot2)

```

# Data

The acuity of vision for seven subjects was tested. The response
is the lag in milliseconds between a light flash and a response in
the cortex of the eye. Each eye is tested at four different powers of lens.
An object at the distance of the second number appears to be at distance
of the first number.

Load in and look at the data:

```{r}
data(vision, package="faraway")
ftable(xtabs(acuity ~ eye + subject + power, data=vision))
```

We create a numeric version of the power to make a plot:

```{r visplot}
vision$npower <- rep(1:4,14)
ggplot(vision, aes(y=acuity, x=npower, linetype=eye)) + geom_line() + facet_wrap(~ subject, ncol=4) + scale_x_continuous("Power",breaks=1:4,labels=c("6/6","6/18","6/36","6/60"))
```

# Mixed Effect Model

The power is a fixed effect. In the model below, we have treated it as a nominal factor,
but we could try fitting it in a quantitative manner. The subjects
should be treated as random effects. Since we do not believe there is
any consistent right-left eye difference between individuals, we should
treat the eye factor as nested within subjects. 

The model can be written as: 

```{math}
y_{ijk} = \mu + p_j + s_i + e_{ik} + \epsilon_{ijk}
```

where $i=1, \dots ,7$ runs over individuals, $j=1, \dots ,4$ runs over
power and $k=1,2$ runs over eyes. The $p_j$ term is a fixed effect, but
the remaining terms are random. Let $s_i \sim N(0,\sigma^2_s)$,
$e_{ik} \sim N(0,\sigma^2_e)$ and $\epsilon_{ijk} \sim N(0,\sigma^2\Sigma)$ where we take $\Sigma=I$.

# LME4

```{r}
library(lme4)
library(pbkrtest)
```


We can fit the model with:

```{r}
mmod <- lmer(acuity~power + (1|subject) + (1|subject:eye),vision)
faraway::sumary(mmod)
```


We can check for a power effect using a Kenward-Roger adjusted $F$-test:

```{r}
mmod <- lmer(acuity~power+(1|subject)+(1|subject:eye),vision,REML=FALSE)
nmod <- lmer(acuity~1+(1|subject)+(1|subject:eye),vision,REML=FALSE)
KRmodcomp(mmod, nmod)
```

The power just fails to meet the 5% level of significance (although note that there
is a clear outlier in the data which deserves some consideration).
We can also compute bootstrap confidence intervals:

```{r visboot, cache=TRUE}
set.seed(123)
print(confint(mmod, method="boot", oldNames=FALSE, nsim=1000),digits=3)
```

We see that lower ends of the CIs for random effect SDs are zero or close to it. 

# NLME

See the discussion for the [single random effect example](pulpfreq.md#NLME)
for some introduction.

The syntax for specifying the nested/heirarchical model is different from `lme4`:

```{r}
library(nlme)
nlmod = lme(acuity ~ power, 
            vision, 
            ~ 1 | subject/eye)
summary(nlmod)
```

The results are presented somewhat differently but match those presented
by `lme4` earlier. We do get p-values for the fixed effects but these
are not so useful.

We can get tests on the fixed effects with:

```{r}
anova(nlmod)
```

In this case, the results are the same as with the `pbkrtest` output because
the degrees of freedom adjustment has no effect. This is not always the case.

# MMRM

This package is not designed to fit models with a hierarchical structure. In
principle, it should be possible to specify a parameterised covariance
structure corresponding to this design but the would reduce to the
previous computations.

# GLMMTMB

See the discussion for the [single random effect example](pulpfreq.md#GLMMTMB)
for some introduction.

```{r}
library(glmmTMB)
```

The default fit uses ML (not REML)

```{r}
gtmod <- glmmTMB(acuity~power+(1|subject)+(1|subject:eye),data=vision)
summary(gtmod)
```


Another option is to use REML with:

```{r}
gtmodr = glmmTMB(acuity~power+(1|subject)+(1|subject:eye),data=vision,
                REML=TRUE)
summary(gtmodr)
```

The result is appears identical with the previous REML fits.

If we want to test the significance of the `power` fixed effect, we have
the same methods available as for the `lme4` fit.

# Discussion

See the [Discussion of the single random effect model](pulp.md#Discussion) for
general comments. 

`lme4`, `nlme` and `glmmTMB` were all able to fit this model. `mmrm` was not designed
for this type of model. 


# Package version info

```{r}
sessionInfo()
```



